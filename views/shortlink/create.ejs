<% layout('layouts/boilerplate') %>
<main class="container d-flex align-items-center justify-content-center" style="min-height: 85vh">
    <div class="row">
        <div class="col-md-6 mb-3 align-self-center">
            <h1>Create Shortlink</h1>
            <form id="formCreateShortlink" class="needs-validation" action="/s/create" method="POST" novalidate>
                <div class="mb-3">
                    <label for="description" class="form-label">Short Description</label>
                    <input type="text" class="form-control" id="description" placeholder='e.g. "Summer Holidays 2022"'
                        name="description" required></input>
                </div>
                <div class="mb-3">
                    <label for="name" class="form-label">Name (defines URL)</label>
                    <input type="text" class="form-control" id="name" name="name" aria-describedby="nameHelp"
                        placeholder='e.g. "SHD22"' autocomplete="false" required>
                    <div id="nameHelp" class="invalid-feedback">This name is already in use, try another one.</div>
                    <div class="d-flex justify-content-start form-text">
                        <div class="me-1">Your shortened URL will be:</div>
                        <div id="newURL">-</div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="link" class="form-label">Destination URL</label>
                    <input type="url" class="form-control" id="link" name="destinationURL" pattern="https://.*"
                        placeholder="https://www.google.com/" required>
                    <div class="invalid-feedback">
                        Please enter a valid URL including 'https://'.
                    </div>
                </div>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="terms" name="terms" required>
                    <label for="active" class="form-check-label">I agree with the <a href="terms">Terms of Service</a>
                        and <a href="privacy">Privacy Policy</a>.</label>
                </div>
                <div class="d-flex justify-content-end">
                    <button class="btn btn-primary" type="button" id="btnSubmit">Create Shortlink</button>
                </div>
            </form>
        </div>
        <div class="col-md-6">
            <img src="/images/link_shortener.svg" alt="" class="img-fluid">
        </div>
    </div>
    <script>
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        const inputname = document.getElementById('name');
        inputname.setAttribute("autocomplete", "off");
        inputname.addEventListener("input", computeShortlink);
        inputname.addEventListener("input", checkShortlinkForDuplication);
        document.getElementById('btnSubmit').addEventListener("click", () => {
            if (!inputname.classList.contains('is-invalid')) {
                document.getElementById('formCreateShortlink').submit();
            }
        });

        const tbNewURL = document.getElementById('newURL');

        function computeShortlink(event) {
            const value = event.currentTarget.value.replace(/ /g, '_');
            if (value !== "") {
                const currentURL = window.location.href;
                tbNewURL.innerText = currentURL.substring(0, currentURL.lastIndexOf("/") + 1) + "@" + encodeURI(value);
            } else {
                tbNewURL.innerText = '-';
            }
        }

        function checkShortlinkForDuplication() {
            const name = inputname.value;
            const newURL = tbNewURL.innerText;

            if (name !== "") {
                fetch('/s/api/checkduplication', {
                        method: 'POST',
                        body: JSON.stringify({
                            name: name,
                            newURL: newURL
                        }),
                        headers: {
                            "Content-type": "application/json; charset=UTF-8"
                        }
                    })
                    .then(async (response) => {
                        const data = await response.json();
                        if (data.duplicate == true) {
                            inputname.classList.add('is-invalid')
                            inputname.classList.remove('is-valid')
                            inputname.classList.remove('was-validated')
                            document.getElementById('formCreateShortlink').classList.remove('was-validated')
                            return true;
                        } else {
                            inputname.classList.remove('is-invalid')
                            inputname.classList.add('is-valid')
                            return false;
                        }
                    });
            }
        }
    </script>
</main>