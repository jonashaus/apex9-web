const express = require('express');
const router = express.Router();
const User = require('../models/user');
const Shortlink = require('../models/shortlink');
const { isLoggedIn } = require('../utils/middleware');
const wrapAsync = require('../utils/wrapAsync');
const { userSchema } = require('../schemas');
const ExpressError = require('../utils/ExpressError');

router.get('/', isLoggedIn, wrapAsync(async (req, res, next) => {
    const shortlinks = await Shortlink.find({});
    res.render('shortlink/shortlinks', { shortlinks });
}))

router.get('/track/:id', wrapAsync(async (req, res) => {
    const { id } = req.params;
    const shortlink = await Shortlink.findById(id);
    if (!shortlink) {
        const redirectUrl = req.session.originalUrl || '/';
        delete req.session.originalUrl;
        req.flash('error', `We couldn't find that shortlink , sorry :(`);
        return res.redirect(redirectUrl);
    }
    res.render('shortlink/track', { shortlink });
}))

router.get('/create', isLoggedIn, (req, res, next) => {
    res.render('shortlink/create');
})

router.post('/create', wrapAsync(async (req, res, next) => {
    try {
        const { description, name, destinationURL } = req.body;
        const shortenedURLelement = "@" + encodeURI(name.replace(' ', '_'));

        const newShortlink = await new Shortlink({ name, shortenedURLelement, description, destinationURL, owner: req.app.locals.currentUser });
        req.flash('success', 'Shortlink created!');
        console.log(newShortlink);
        res.redirect(`/track/${newShortlink.id}`);
    } catch (err) {
        throw new ExpressError(500, err.message);
    }
}))

router.get('/terms', isLoggedIn, (req, res, next) => {
    res.render('shortlink/terms');
})

router.get('/privacy', isLoggedIn, (req, res, next) => {
    res.render('shortlink/privacy');
})

router.get('/:name', (req, res) => {
})

module.exports = router;